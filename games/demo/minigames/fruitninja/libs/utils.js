function $(n){return document.getElementById(n)}function getWebGLContext(n){return n.getContext("webgl")||n.getContext("experimental-webgl")}function createShader(n,t,i){var r=n.createShader(t),u,f;return r==null&&console.error("Error creating the shader with shader type: "+t),n.shaderSource(r,i),n.compileShader(r),u=n.getShaderParameter(r,n.COMPILE_STATUS),u||(f=n.getShaderInfoLog(r),n.deleteShader(r),console.error("Error while compiling the shader "+f)),r}function createShaderFromURI(n,t,i,r){var u=new XMLHttpRequest;u.open("GET",i,!0),u.onreadystatechange=function(){u.readyState==4&&(u.status==200?r(createShader(n,t,u.responseText)):(console.error("There was an error in the page load"),r(null)))},u.send(null)}function createProgramFromShaders(n,t,i){var r=n.createProgram(),u;return n.attachShader(r,t),n.attachShader(r,i),n.linkProgram(r),u=n.getProgramParameter(r,n.LINK_STATUS),u||console.error("Error linking the shader: "+n.getProgramInfoLog(r)),r}function createProgramFromURIs(n,t){var i=t.vsURI,r=t.fsURI,u=t.onComplete;createShaderFromURI(n,n.VERTEX_SHADER,i,function(t){createShaderFromURI(n,n.FRAGMENT_SHADER,r,function(i){u(createProgramFromShaders(n,t,i))})})}function createProgramsFromURIs(n,t){var i=t.programs.length,r={},u=function(n,u){if(i--,r[n]=u,i<=0)t.onComplete(r)};t.programs.forEach(function(t){createProgramFromURIs(n,{vsURI:t.vsURI,fsURI:t.fsURI,onComplete:function(n){u(t.name,n)}})})}var supportsWebGL;(function(){try{var n=document.createElement("canvas");supportsWebGL=function(){return!!(window.WebGLRenderingContext&&(n.getContext("webgl")||n.getContext("experimental-webgl")))}}catch(t){supportsWebGL=function(){return!1}}})(),function(){if(!window.requestAnimationFrame){var n=!1;["oRequestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame"].forEach(function(t){t in window&&(window.requestAnimationFrame=function(n){window[t](function(){n()})},n=!0)}),n||(window.requestAnimationFrame=function(n){setTimeout(function(){n()},1e3/60)})}}()